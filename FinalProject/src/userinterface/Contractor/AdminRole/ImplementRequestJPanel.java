/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.Contractor.AdminRole;

import Business.Employee.Employee;
import Business.Enterprise.Enterprise;
import Business.Network.Network;
import Business.Organization.Contractor.ContractorAdminOrganization;
import Business.Organization.Contractor.ImplementorOrganization;
import Business.Organization.Organization;
import Business.Organization.OrganizationDirectory;

import Business.WorkQueue.WorkRequest;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.ContractorImplementationWorkQueue;
import Business.WorkRequest.ExecutiveNewLocationRequest;
import Business.WorkRequest.ContractorImplementRequest;
import Business.WorkRequest.ExecutiveMaintenanceRequest;
import java.awt.CardLayout;
import java.text.SimpleDateFormat;
import java.util.List;
import javax.swing.JOptionPane;

/**
 *
 * @author jindou
 */
public class ImplementRequestJPanel extends javax.swing.JPanel {

    /**
     * Creates new form MangageImplementorJPanel
     */
    
    private JPanel userProcessContainer;
     private Enterprise enterprise;
     OrganizationDirectory organizationDirectory;
     List<ExecutiveNewLocationRequest> locationReqList;
     UserAccount account;
     private ContractorAdminOrganization org;
     //ExecutiveOrganization organization;
     private Network network;
     
    public ImplementRequestJPanel(JPanel userProcessContainer, OrganizationDirectory organizationDirectory,
             List<ExecutiveNewLocationRequest> locationReqList,
             UserAccount account,
           ContractorAdminOrganization organization,Enterprise enterprise,Network network) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.enterprise = enterprise;

        this.userProcessContainer = userProcessContainer;
        this.organizationDirectory = organizationDirectory;
        this.locationReqList = locationReqList;
        this.account = account;
          this.org = organization;
        this.enterprise = enterprise;
         this.network = network;
        //populateTable();
        refreshTable();
        populateImplementorCombo();
    }
    
    public void  populateImplementorCombo(){
        
        implementComboBox.removeAllItems();
        for(Organization organization : enterprise.getOrganizationDirectory().getOrganizationList() ){
               if(organization.getType() == Organization.Type.ContractorImplementor){
                   for(UserAccount userAccount : organization.getUserAccountDirectory().getUserAccountList()){
                         
                       if(!userAccount.getIsWorking()){
                           implementComboBox.addItem(userAccount);
                       }
                        
                         }
                     }
              }
        }
    

      private void refreshTable() {
        DefaultTableModel model = (DefaultTableModel) table.getModel();
        SimpleDateFormat format = new SimpleDateFormat("yyyy-MM-dd");
            model.setRowCount(0);
           if(locationReqList == null){
                System.out.println(
                      "list empty");
                
           }
            else{
                for (ExecutiveNewLocationRequest r : locationReqList) {
                    if(r.getRecevingContractor() == enterprise){
                        Object row[] = new Object[7];
                        row[0] = r;
                        row[1] = r.getSendingCompany();
                        row[2] = r.getReceiver();
                        row[3] = format.format(r.getRequestDate());
                        row[4] = r.getFullAddress();
                        row[5] = r.getNumPiles();
                        row[6] = r.getStatus();
               
                        model.addRow(row);
                    }
               
                }
           }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        refreshJButton = new javax.swing.JButton();
        implementComboBox = new javax.swing.JComboBox();
        assignJButton = new javax.swing.JButton();
        enterpriseLabel = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();
        btnDetail = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));
        setPreferredSize(new java.awt.Dimension(1150, 600));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        refreshJButton.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        refreshJButton.setForeground(new java.awt.Color(40, 113, 162));
        refreshJButton.setText("Refresh");
        refreshJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshJButtonActionPerformed(evt);
            }
        });
        add(refreshJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(1334, 93, -1, -1));

        implementComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                implementComboBoxActionPerformed(evt);
            }
        });
        add(implementComboBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 330, 250, -1));

        assignJButton.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        assignJButton.setForeground(new java.awt.Color(40, 113, 162));
        assignJButton.setText("Assign");
        assignJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                assignJButtonActionPerformed(evt);
            }
        });
        add(assignJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 400, 170, 35));

        enterpriseLabel.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        enterpriseLabel.setText("Assign Works to Implementor");
        add(enterpriseLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 30, 330, 30));

        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Request Type", "Exec Company", "Implementor", "Date", "Location", "Pile Number", "Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(table);
        if (table.getColumnModel().getColumnCount() > 0) {
            table.getColumnModel().getColumn(2).setResizable(false);
            table.getColumnModel().getColumn(3).setResizable(false);
            table.getColumnModel().getColumn(4).setResizable(false);
            table.getColumnModel().getColumn(5).setResizable(false);
            table.getColumnModel().getColumn(6).setResizable(false);
        }

        add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 100, 710, 176));

        btnDetail.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnDetail.setForeground(new java.awt.Color(40, 113, 162));
        btnDetail.setText("View Detail");
        btnDetail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDetailActionPerformed(evt);
            }
        });
        add(btnDetail, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 400, 150, 36));

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(40, 113, 162));
        jLabel3.setText("Implementor");
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 330, -1, -1));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pics/repair.png"))); // NOI18N
        jLabel1.setText(" ");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, -10, 1100, 610));
    }// </editor-fold>//GEN-END:initComponents

    private void refreshJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshJButtonActionPerformed
        refreshTable();
    }//GEN-LAST:event_refreshJButtonActionPerformed

    private void implementComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_implementComboBoxActionPerformed
        // TODO add your handling code here:
        refreshTable();
    }//GEN-LAST:event_implementComboBoxActionPerformed

    private void assignJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_assignJButtonActionPerformed
        int selectedRow = table.getSelectedRow();

        if (selectedRow < 0){
            return;
        }

        WorkRequest request = (WorkRequest)table.getValueAt(selectedRow, 0);
        request.setReceiver((UserAccount)implementComboBox.getSelectedItem());
        request.setStatus("SENT");
        UserAccount imp = (UserAccount)implementComboBox.getSelectedItem();
        imp.setIsWorking(true);
       // populateTable();
       refreshTable();
       populateImplementorCombo();
    }//GEN-LAST:event_assignJButtonActionPerformed

    private void btnDetailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDetailActionPerformed
        // TODO add your handling code here:
        int selectedRow = table.getSelectedRow();

        if (selectedRow < 0){
            JOptionPane.showMessageDialog(null, "Please select a row from table first", "Warning",JOptionPane.WARNING_MESSAGE);
            return;
        }

        ExecutiveNewLocationRequest request = (ExecutiveNewLocationRequest)table.getValueAt(selectedRow, 0);
        
        if(request.getReceiver() == null){
            JOptionPane.showMessageDialog(null, "Please assign an implementor first!!!", "Warning",JOptionPane.WARNING_MESSAGE);
            return;
        }
            CardLayout layout = (CardLayout) userProcessContainer.getLayout();
           //userProcessContainer.add("RequestLabTestJPanel", new RequestLabTestJPanel(userProcessContainer, userAccount, enterpirse));
           userProcessContainer.add("ViewImplementDetailJPanel", new ViewImplementDetailJPanel(userProcessContainer, request));
           layout.next(userProcessContainer);
        
        
        
    }//GEN-LAST:event_btnDetailActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton assignJButton;
    private javax.swing.JButton btnDetail;
    private javax.swing.JLabel enterpriseLabel;
    private javax.swing.JComboBox implementComboBox;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton refreshJButton;
    private javax.swing.JTable table;
    // End of variables declaration//GEN-END:variables
}
