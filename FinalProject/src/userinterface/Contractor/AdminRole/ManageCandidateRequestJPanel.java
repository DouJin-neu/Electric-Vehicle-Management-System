/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.Contractor.AdminRole;
import Business.Enterprise.Enterprise;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.WorkRequest;
import Business.WorkRequest.CandidateRequest;
import Business.WorkRequest.FeedbackWorkRequest;
import java.awt.CardLayout;
import java.awt.Component;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
/**
 *
 * @author jindou
 */


public class ManageCandidateRequestJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ManageCandidateRequestJPanel
     */
    private JPanel userProcessContainer;
     private Enterprise enterprise;
     private UserAccount userAccount;
     
    public ManageCandidateRequestJPanel(JPanel userProcessContainer,UserAccount account, Enterprise enterprise) {
        initComponents();
         this.userProcessContainer = userProcessContainer;
          this.userAccount = account;
         this.enterprise = enterprise;
        populateTable();
    }
    
     public void populateTable(){
        DefaultTableModel model = (DefaultTableModel)workRequestJTable.getModel();
        
        model.setRowCount(0);
        
        for(WorkRequest request : enterprise.getWorkQueue().getWorkRequestList()){
            if(request instanceof CandidateRequest ){
                Object[] row = new Object[4];
            row[0] = (CandidateRequest)request;
            row[1] = ((CandidateRequest)request).getMessage();
            row[2] = ((CandidateRequest)request).getSender().getName();
            row[3] = ((CandidateRequest)request).getStatus();
           
            model.addRow(row);
        }
            }
            
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        assignJButton = new javax.swing.JButton();
        refreshJButton = new javax.swing.JButton();
        btnReject = new javax.swing.JButton();
        btnView = new javax.swing.JButton();
        btnResultt = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        workRequestJTable = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));
        setPreferredSize(new java.awt.Dimension(1150, 600));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        assignJButton.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        assignJButton.setForeground(new java.awt.Color(40, 113, 162));
        assignJButton.setText("Mark as Interviewed");
        assignJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                assignJButtonActionPerformed(evt);
            }
        });
        add(assignJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(433, 296, 207, 40));

        refreshJButton.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        refreshJButton.setForeground(new java.awt.Color(40, 113, 162));
        refreshJButton.setText("Refresh");
        refreshJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshJButtonActionPerformed(evt);
            }
        });
        add(refreshJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 90, 97, -1));

        btnReject.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnReject.setForeground(new java.awt.Color(40, 113, 162));
        btnReject.setText("Mark as Rejected");
        btnReject.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRejectActionPerformed(evt);
            }
        });
        add(btnReject, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 360, 207, 40));

        btnView.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnView.setForeground(new java.awt.Color(40, 113, 162));
        btnView.setText("View Profile");
        btnView.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewActionPerformed(evt);
            }
        });
        add(btnView, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 290, 210, 40));

        btnResultt.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnResultt.setForeground(new java.awt.Color(40, 113, 162));
        btnResultt.setText("Provide Offer");
        btnResultt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnResulttActionPerformed(evt);
            }
        });
        add(btnResultt, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 360, 207, 40));

        workRequestJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Request Type", "Introduction", "Name", "Status"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(workRequestJTable);
        if (workRequestJTable.getColumnModel().getColumnCount() > 0) {
            workRequestJTable.getColumnModel().getColumn(0).setResizable(false);
            workRequestJTable.getColumnModel().getColumn(1).setResizable(false);
            workRequestJTable.getColumnModel().getColumn(2).setResizable(false);
            workRequestJTable.getColumnModel().getColumn(3).setResizable(false);
        }

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 90, 567, 150));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pics/candidateRequest.png"))); // NOI18N
        jLabel1.setText(" ");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 60, 690, 620));

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        jLabel2.setText("Manage Candidate Request WorkArea");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 20, -1, 40));
    }// </editor-fold>//GEN-END:initComponents

    private void assignJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_assignJButtonActionPerformed

        int selectedRow = workRequestJTable.getSelectedRow();

        if (selectedRow < 0){
            JOptionPane.showMessageDialog(null, "Please select a row from table first", "Warning",JOptionPane.WARNING_MESSAGE);
            return;
        }

        CandidateRequest request = (CandidateRequest)workRequestJTable.getValueAt(selectedRow, 0);
        request.setStatus("Preparing an Interview");
        request.setReceiver(userAccount);
        request.getFeedback();
        populateTable();
    }//GEN-LAST:event_assignJButtonActionPerformed

    private void refreshJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshJButtonActionPerformed
        populateTable();
    }//GEN-LAST:event_refreshJButtonActionPerformed

    private void btnRejectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRejectActionPerformed
        // TODO add your handling code here:
         int selectedRow = workRequestJTable.getSelectedRow();

        if (selectedRow < 0){
            JOptionPane.showMessageDialog(null, "Please select a row from table first", "Warning",JOptionPane.WARNING_MESSAGE);
            return;
        }

        CandidateRequest request = (CandidateRequest)workRequestJTable.getValueAt(selectedRow, 0);
        request.setStatus("Completed");
        request.setReceiver(userAccount);
        request.setFeedback("Rejected");
        //request.getFeedback();
        populateTable();
    }//GEN-LAST:event_btnRejectActionPerformed

    private void btnViewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewActionPerformed
        // TODO add your handling code here:
        int selectedRow = workRequestJTable.getSelectedRow();
        
        if (selectedRow < 0){
            JOptionPane.showMessageDialog(null, "Please select a row from table first", "Warning",JOptionPane.WARNING_MESSAGE);
            return;
        }
        
        CandidateRequest request = (CandidateRequest)workRequestJTable.getValueAt(selectedRow, 0);
     
        request.setStatus("Viewing Resume");
        
        ViewDetailJPanel viewDetailJPanel = new ViewDetailJPanel(userProcessContainer, request);
        userProcessContainer.add("viewDetailJPanel", viewDetailJPanel);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);
    }//GEN-LAST:event_btnViewActionPerformed

    private void btnResulttActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnResulttActionPerformed
        // TODO add your handling code here:
        int selectedRow = workRequestJTable.getSelectedRow();

        if (selectedRow < 0){
            JOptionPane.showMessageDialog(null, "Please select a row from table first", "Warning",JOptionPane.WARNING_MESSAGE);
            return;
        }

        CandidateRequest request = (CandidateRequest)workRequestJTable.getValueAt(selectedRow, 0);

        request.setStatus("Processing");

        ResultCandidateRequestJPanel rcrjp = new ResultCandidateRequestJPanel(userProcessContainer, request,enterprise);
        userProcessContainer.add("processWorkRequestJPanel", rcrjp);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);
    }//GEN-LAST:event_btnResulttActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton assignJButton;
    private javax.swing.JButton btnReject;
    private javax.swing.JButton btnResultt;
    private javax.swing.JButton btnView;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton refreshJButton;
    private javax.swing.JTable workRequestJTable;
    // End of variables declaration//GEN-END:variables
}
