/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.Company.Admin;

import Business.EcoSystem;
import Business.Organization.OrganizationDirectory;
import Business.StationMap.ChargingPile;
import Business.StationMap.ChargingStation;
import Business.StationMap.Coordinate;
import java.awt.CardLayout;
import java.awt.Color;
import java.text.DecimalFormat;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.labels.PieSectionLabelGenerator;
import org.jfree.chart.labels.StandardPieSectionLabelGenerator;
import org.jfree.chart.plot.PiePlot3D;
import org.jfree.data.general.DefaultPieDataset;

/**
 *
 * @author shaohanghu
 */
public class CompAdminStationDetailJPanel extends javax.swing.JPanel {

    /**
     * Creates new form CompAdminStationDetailJPanel
     */
    JPanel userProcessContainer;
    List<ChargingStation> map;
    ChargingStation station;
    
    public CompAdminStationDetailJPanel(JPanel userProcessContainer, ChargingStation o,
            List<ChargingStation> map) {
        this.userProcessContainer = userProcessContainer;
        this.map = map;
        this.station = o;
        initComponents();
        refreshTable();
        displayContent();
        DisplayChart();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        labelName = new javax.swing.JLabel();
        buttonBack = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        txtName = new javax.swing.JTextField();
        txtX = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtY = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();
        jLabel5 = new javax.swing.JLabel();
        buttonDeletePile = new javax.swing.JButton();
        buttonAddPile = new javax.swing.JButton();
        buttonBroken = new javax.swing.JButton();
        buttonAvali = new javax.swing.JButton();
        buttonEdit = new javax.swing.JButton();
        buttonSave = new javax.swing.JButton();
        labelName1 = new javax.swing.JLabel();
        txtAdd = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        chartPnl = new javax.swing.JPanel();
        labelNetwork = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));

        labelName.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        labelName.setForeground(new java.awt.Color(0, 102, 255));
        labelName.setText("<Network>");

        buttonBack.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        buttonBack.setText("<Back");
        buttonBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonBackActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 102, 153));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel2.setText("Station Name:");

        txtName.setEnabled(false);

        txtX.setEnabled(false);

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 102, 153));
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel3.setText("X Coordinate:");

        txtY.setEnabled(false);

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(0, 102, 153));
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel4.setText("Y Coordinate:");

        table.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "ID", "Occupied?", "Broken?", "Usage"
            }
        ));
        jScrollPane1.setViewportView(table);
        if (table.getColumnModel().getColumnCount() > 0) {
            table.getColumnModel().getColumn(1).setPreferredWidth(40);
            table.getColumnModel().getColumn(2).setPreferredWidth(40);
            table.getColumnModel().getColumn(3).setPreferredWidth(30);
        }

        jLabel5.setBackground(new java.awt.Color(0, 0, 0));
        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(0, 102, 153));
        jLabel5.setText("Charging Piles");

        buttonDeletePile.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        buttonDeletePile.setText("Delete Selected Pile");
        buttonDeletePile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonDeletePileActionPerformed(evt);
            }
        });

        buttonAddPile.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        buttonAddPile.setText("Add a Pile");
        buttonAddPile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonAddPileActionPerformed(evt);
            }
        });

        buttonBroken.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        buttonBroken.setText("Toggle Broken");
        buttonBroken.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonBrokenActionPerformed(evt);
            }
        });

        buttonAvali.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        buttonAvali.setText("Toggle Avaliability");
        buttonAvali.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonAvaliActionPerformed(evt);
            }
        });

        buttonEdit.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        buttonEdit.setText("Edit");
        buttonEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonEditActionPerformed(evt);
            }
        });

        buttonSave.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        buttonSave.setText("Save");
        buttonSave.setEnabled(false);
        buttonSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonSaveActionPerformed(evt);
            }
        });

        labelName1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        labelName1.setForeground(new java.awt.Color(0, 102, 255));
        labelName1.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        labelName1.setText("Station:");

        txtAdd.setEnabled(false);

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(0, 102, 153));
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel6.setText("Address:");

        chartPnl.setLayout(new java.awt.BorderLayout());

        labelNetwork.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        labelNetwork.setForeground(new java.awt.Color(0, 102, 255));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(txtX, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(txtY, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(buttonEdit)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(buttonSave))))
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(buttonBack, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(18, 18, 18)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(labelName1, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addComponent(labelName, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(txtAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(chartPnl, javax.swing.GroupLayout.PREFERRED_SIZE, 335, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(51, 51, 51)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(buttonAvali, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(buttonAddPile, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(buttonDeletePile))
                    .addComponent(buttonBroken, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 347, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelNetwork, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 79, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(buttonBack, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(labelName1, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(labelName, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(labelNetwork, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 226, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(buttonDeletePile, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(buttonAddPile, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(buttonAvali, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(buttonBroken, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(7, 7, 7)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtX, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtY, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(buttonEdit, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(buttonSave, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(chartPnl, javax.swing.GroupLayout.PREFERRED_SIZE, 254, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(48, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void buttonBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonBackActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_buttonBackActionPerformed

    private void buttonEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonEditActionPerformed
        // TODO add your handling code here:
        txtName.setEnabled(true);
        txtX.setEnabled(true);
        txtY.setEnabled(true);
        
        buttonEdit.setEnabled(false);
        buttonSave.setEnabled(true);
    }//GEN-LAST:event_buttonEditActionPerformed

    private void buttonSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonSaveActionPerformed
        // TODO add your handling code here:
        
        
        station.setName(txtName.getText());
        Coordinate co = new Coordinate(Double.parseDouble(txtX.getText()), Double.parseDouble(txtY.getText()));
        station.setCoordinate(co);
        refreshTable();
        DisplayChart();
        txtName.setEnabled(false);
        txtX.setEnabled(false);
        txtY.setEnabled(false);
        
        buttonEdit.setEnabled(true);
        buttonSave.setEnabled(false);
        JOptionPane.showMessageDialog(null, "Success");
    }//GEN-LAST:event_buttonSaveActionPerformed

    private void buttonAddPileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonAddPileActionPerformed
        // TODO add your handling code here:
        ChargingPile p = new ChargingPile();
        station.add(p);
        refreshTable();
        DisplayChart();
    }//GEN-LAST:event_buttonAddPileActionPerformed

    private void buttonDeletePileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonDeletePileActionPerformed
        // TODO add your handling code here:
        int row = table.getSelectedRow();
        if(row<0){
            JOptionPane.showMessageDialog(null, "Please select a row!!", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        ChargingPile pile = (ChargingPile)table.getValueAt(row,0);
        
        int n = JOptionPane.showConfirmDialog(null, "Delete Pile " + pile + " ?", "Delete?", JOptionPane.YES_NO_OPTION);
        if(n == 0){
            map.remove(pile);
            refreshTable();
            DisplayChart();
            JOptionPane.showMessageDialog(null, "Deleted!");
        }
    }//GEN-LAST:event_buttonDeletePileActionPerformed

    private void buttonAvaliActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonAvaliActionPerformed
        // TODO add your handling code here:
        int row = table.getSelectedRow();
        if(row<0){
            JOptionPane.showMessageDialog(null, "Please select a row!!", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        ChargingPile pile = (ChargingPile)table.getValueAt(row,0);
         if(pile.isIsBroken()== true){
             JOptionPane.showMessageDialog(null, "Charging Pile Need Maintenance Before Set to Avaliable", "Warning", JOptionPane.WARNING_MESSAGE);
         }
         else{
             if(pile.isIsOccupied() == true){
            pile.setIsOccupied(false);
            }
            else{
                pile.setIsOccupied(true);
            }
         }
        
        refreshTable();
        DisplayChart();
    }//GEN-LAST:event_buttonAvaliActionPerformed

    private void buttonBrokenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonBrokenActionPerformed
        // TODO add your handling code here:
         int row = table.getSelectedRow();
        if(row<0){
            JOptionPane.showMessageDialog(null, "Please select a row!!", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        ChargingPile pile = (ChargingPile)table.getValueAt(row,0);
        if(pile.isIsBroken()== true){
            pile.setIsBroken(false);
        }
        else{
            pile.setIsBroken(true);
            pile.setIsOccupied(false);
        }
        refreshTable();
        DisplayChart();
    }//GEN-LAST:event_buttonBrokenActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonAddPile;
    private javax.swing.JButton buttonAvali;
    private javax.swing.JButton buttonBack;
    private javax.swing.JButton buttonBroken;
    private javax.swing.JButton buttonDeletePile;
    private javax.swing.JButton buttonEdit;
    private javax.swing.JButton buttonSave;
    private javax.swing.JPanel chartPnl;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel labelName;
    private javax.swing.JLabel labelName1;
    private javax.swing.JLabel labelNetwork;
    private javax.swing.JTable table;
    private javax.swing.JTextField txtAdd;
    private javax.swing.JTextField txtName;
    private javax.swing.JTextField txtX;
    private javax.swing.JTextField txtY;
    // End of variables declaration//GEN-END:variables
    
    private void refreshTable() {
           DefaultTableModel model = (DefaultTableModel) table.getModel();
                model.setRowCount(0);

               for (ChargingPile r : station.getPileList()) {
                   Object row[] = new Object[5];
                   row[0] = r;
                   row[1] = r.isIsOccupied();
                   row[2] = r.isIsBroken();
                   row[3] = r.getUsage();
                   model.addRow(row);
               }
        }

    private void displayContent() {
       labelName.setText(station.getName());
       if(station.getNetwork() == null){
           System.out.println("No Network Saved in this Station");
       }else{
           labelNetwork.setText("Network: " + station.getNetwork().getName());
       }
       txtName.setText(station.getName());
       txtAdd.setText(station.getFullAddress());
       txtX.setText(Double.toString(station.getCoordinate().getX()));
       txtY.setText(Double.toString(station.getCoordinate().getY()));
       
    }

    private void DisplayChart() {
        DefaultPieDataset dataset = new DefaultPieDataset();
        int brokenCount =0;
        int healthyCount = 0;
        for (ChargingPile r : station.getPileList()) {
                if(r.isIsBroken()){
                    brokenCount++;
                   dataset.setValue("BROKEN", brokenCount);
                }
                else{
                    healthyCount++;
                    dataset.setValue("HEALTHY", healthyCount);
                }
               
           }
        JFreeChart chart = ChartFactory.createPieChart3D(
                "Charging Pile Status", // chart title                   
                dataset, // data 
                true, // include legend                   
                false,
                false);
        // set chart properties
        final PiePlot3D plot = (PiePlot3D) chart.getPlot();
        PieSectionLabelGenerator gen = new StandardPieSectionLabelGenerator(
            "{1}Piles ({2})", new DecimalFormat("0"), new DecimalFormat("0%"));
        
        for (int i = 0; i < dataset.getItemCount(); i++) {
            if(dataset.getKey(i).equals("HEALTHY")){ 
                plot.setSectionPaint(i, Color.GREEN);
            }
            if(dataset.getKey(i).equals("BROKEN")){ 
                plot.setSectionPaint(i, Color.ORANGE);
            }
        }
        
        plot.setLabelGenerator(null);
        plot.setStartAngle(270);
        plot.setForegroundAlpha(0.60f);
        plot.setInteriorGap(0.02);
        ChartPanel chartPanel = new ChartPanel(chart);
        chartPnl.removeAll();        // clear panel before add new chart
        chartPnl.add(chartPanel);
        chartPnl.setVisible(true);
        chartPnl.validate();         // refresh panel to display new chart
    }
}
