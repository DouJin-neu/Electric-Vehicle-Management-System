/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.Company.Admin;

import Business.EcoSystem;
import Business.Enterprise.CompanyEnterprise;
import Business.Enterprise.Enterprise;
import Business.Organization.OrganizationDirectory;
import Business.StationMap.ChargingPile;
import Business.StationMap.ChargingStation;
import Business.StationMap.Coordinate;
import Business.StationMap.StationMap;
import java.awt.BorderLayout;
import java.awt.CardLayout;
import java.io.IOException;
import java.text.DecimalFormat;
import java.util.List;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.labels.PieSectionLabelGenerator;
import org.jfree.chart.labels.StandardPieSectionLabelGenerator;
import org.jfree.chart.plot.CategoryPlot;
import org.jfree.chart.plot.PiePlot3D;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.data.category.DefaultCategoryDataset;
import org.jfree.data.general.DefaultPieDataset;
import static userinterface.User.UserReportAShortageJPanel.geocoding;


/**
 *
 * @author shaohanghu
 */
public class CompMngStationJPanel extends javax.swing.JPanel {

    /**
     * Creates new form CompMngStationJPanel
     */
    JPanel userProcessContainer;
    OrganizationDirectory orgDir;
    EcoSystem system;
    List<ChargingStation> map;
    CompanyEnterprise comp;
    
    public  CompMngStationJPanel(JPanel compAdminWorkArea,
            OrganizationDirectory organizationDirectory, EcoSystem system,
            CompanyEnterprise enterprise) {
        initComponents();
        this.userProcessContainer = compAdminWorkArea;
        this.orgDir = orgDir;
        this.system = system;
        this.map = system.getStationmap().getMap();
        this.comp = enterprise;
        refreshTable();
        DisplayChart();
    }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel4 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        buttonDelete = new javax.swing.JButton();
        buttonDetail = new javax.swing.JButton();
        chartPnl = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        buttonGeneCo = new javax.swing.JButton();
        txtAdd = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        txtName = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        spinPile = new javax.swing.JSpinner();
        jLabel7 = new javax.swing.JLabel();
        txtY = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        buttonAddNew1 = new javax.swing.JButton();
        txtX = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();

        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel4.setText("Name:");

        setBackground(new java.awt.Color(255, 255, 255));

        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Station ID", "Pile#", "Avaliable", "Broken", "Network"
            }
        ));
        jScrollPane1.setViewportView(table);
        if (table.getColumnModel().getColumnCount() > 0) {
            table.getColumnModel().getColumn(0).setPreferredWidth(120);
        }

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(40, 113, 162));
        jLabel1.setText("Charging Station Manager");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(40, 113, 162));
        jLabel2.setText("Create New Station");

        buttonDelete.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        buttonDelete.setText("Delete Selected Station");
        buttonDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonDeleteActionPerformed(evt);
            }
        });

        buttonDetail.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        buttonDetail.setText("View / Edit Selected Station");
        buttonDetail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonDetailActionPerformed(evt);
            }
        });

        chartPnl.setPreferredSize(new java.awt.Dimension(250, 170));
        chartPnl.setLayout(new java.awt.BorderLayout());

        jPanel1.setBackground(new java.awt.Color(197, 212, 226));

        buttonGeneCo.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        buttonGeneCo.setText("Generate Coordinates");
        buttonGeneCo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonGeneCoActionPerformed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel8.setText("Address:");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel3.setText("Name:");

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel7.setText("Num of Piles:");

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel6.setText("Y Coordinates:");

        buttonAddNew1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        buttonAddNew1.setText("Create Station");
        buttonAddNew1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonAddNew1ActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel5.setText("X Coordinates:");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(txtX, javax.swing.GroupLayout.PREFERRED_SIZE, 280, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addGap(23, 23, 23)
                                    .addComponent(jLabel7))
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addGap(10, 10, 10)
                                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGap(18, 18, 18)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(spinPile, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txtY, javax.swing.GroupLayout.PREFERRED_SIZE, 280, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(buttonAddNew1))))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGap(35, 35, 35)
                            .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(buttonGeneCo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(txtAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 280, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGap(68, 68, 68)
                            .addComponent(jLabel3)
                            .addGap(18, 18, 18)
                            .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, 280, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(0, 24, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(txtAdd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(4, 4, 4)
                .addComponent(buttonGeneCo, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txtX, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(txtY, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(spinPile, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(buttonAddNew1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(34, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 329, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(36, 36, 36)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(123, 123, 123))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 241, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel2)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(buttonDetail, javax.swing.GroupLayout.PREFERRED_SIZE, 253, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(buttonDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 253, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(chartPnl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(141, 141, 141))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 403, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(buttonDetail, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(buttonDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(26, 26, 26)
                        .addComponent(chartPnl, javax.swing.GroupLayout.PREFERRED_SIZE, 224, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 36, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void buttonDetailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonDetailActionPerformed
        // TODO add your handling code here:
        int row = table.getSelectedRow();
        if(row<0){
            JOptionPane.showMessageDialog(null, "Please select a row!!", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        ChargingStation o = (ChargingStation)table.getValueAt(row,0);
        CompAdminStationDetailJPanel panel = new CompAdminStationDetailJPanel(userProcessContainer, o, map);
        userProcessContainer.add("UserMaintenanceDetail", panel);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);
    }//GEN-LAST:event_buttonDetailActionPerformed
    public boolean patternCorrect(String input){
        Pattern p = Pattern.compile("^[a-zA-Z0-9 ]+$");
        Matcher m = p.matcher(input);
        boolean b = m.matches();
        return b;
    }
    private void buttonGeneCoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonGeneCoActionPerformed
       String address= txtAdd.getText();
        boolean flag=patternCorrect(address);
        String [] parsed = address.split(" ");
        if (!flag){
            JOptionPane.showMessageDialog(null, "Address should follow the format", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        if (address.length()==0 || parsed.length==0){
            JOptionPane.showMessageDialog(null, "Address should not be empty", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        if (parsed.length<2){
            JOptionPane.showMessageDialog(null, "There should be enough information to find the place", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        
        
        
        String url="https://maps.googleapis.com/maps/api/geocode/json?&address=";
        for (int i=0;i<parsed.length-1;i++){
            url+=parsed[i]+"+";
        }
        url+=parsed[parsed.length-1];
        url+="&key=AIzaSyB4LQVH_DbM4JE9gJU8nDe9rkYL6iS2qwU";
        System.out.println(url);
        try
        {
            Coordinate co;
            co=geocoding(url);
            String txtCoordinate = "Latitude: "+co.getX()+" Longtitude: "+co.getY();
            txtX.setText(String.valueOf(co.getX()));
            txtY.setText(String.valueOf(co.getY()));
            txtAdd.setText(co.getFullAddress());
        } catch (IOException ex)
        {
            JOptionPane.showMessageDialog(null, "There is no search result matched", "Error", JOptionPane.ERROR_MESSAGE);
            return;
//            Logger.getLogger(UserReportAShortageJPanel.class.getName()).log(Level.SEVERE, null, ex);
        } catch (Exception ex)
        {
            JOptionPane.showMessageDialog(null, "There is no search result matched", "Error", JOptionPane.ERROR_MESSAGE);
            return;
//            Logger.getLogger(UserReportAShortageJPanel.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_buttonGeneCoActionPerformed

    private void buttonDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonDeleteActionPerformed
        // TODO add your handling code here:
        int row = table.getSelectedRow();
        if(row<0){
            JOptionPane.showMessageDialog(null, "Please select a row!!", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        ChargingStation o = (ChargingStation)table.getValueAt(row,0);
        
        int n = JOptionPane.showConfirmDialog(null, "Delete Station " + o.getName() + " ?", "Delete?", JOptionPane.YES_NO_OPTION);
        if(n == 0){
            map.remove(o);
            refreshTable();
            DisplayChart();
            JOptionPane.showMessageDialog(null, "Deleted!");
        }
    }//GEN-LAST:event_buttonDeleteActionPerformed

    private void buttonAddNew1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonAddNew1ActionPerformed
        // TODO add your handling code here:
        if(txtAdd.getText().isEmpty() || txtName.getText().isEmpty() || txtX.getText().isEmpty() || txtY.getText().isEmpty()){
            JOptionPane.showMessageDialog(null, "All fields required!", "Warning", JOptionPane.WARNING_MESSAGE);
        }
        else{
            ChargingStation station  = new ChargingStation(txtName.getText());
        Coordinate co = new Coordinate(Double.parseDouble(txtX.getText()), Double.parseDouble(txtY.getText()));
        station.setCoordinate(co);
        station.setFullAddress(txtAdd.getText());
        station.setNetwork(comp.getNetwork());
        int numPile = (Integer)spinPile.getValue();
        while(numPile != 0){
            ChargingPile p = new ChargingPile();
            station.add(p);
            numPile --;
        }
        map.add(station);
        refreshTable();
        DisplayChart();
        JOptionPane.showMessageDialog(null, "Success");
        txtName.setText("");
        txtX.setText("");
        txtY.setText("");
        spinPile.setValue(0);
        }
        
    }//GEN-LAST:event_buttonAddNew1ActionPerformed
    
    private DefaultCategoryDataset createDataset() {
        // same dataset for line chart and bar chart
        DefaultCategoryDataset dataset = new DefaultCategoryDataset();
        dataset.addValue(15, "products", "1970");
        dataset.addValue(30, "products", "1980");
        dataset.addValue(60, "products", "1990");
        dataset.addValue(120, "products", "2000");
        dataset.addValue(240, "products", "2010");
        dataset.addValue(300, "products", "2014");

        return dataset;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonAddNew1;
    private javax.swing.JButton buttonDelete;
    private javax.swing.JButton buttonDetail;
    private javax.swing.JButton buttonGeneCo;
    private javax.swing.JPanel chartPnl;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JSpinner spinPile;
    private javax.swing.JTable table;
    private javax.swing.JTextField txtAdd;
    private javax.swing.JTextField txtName;
    private javax.swing.JTextField txtX;
    private javax.swing.JTextField txtY;
    // End of variables declaration//GEN-END:variables

    private void refreshTable() {
       DefaultTableModel model = (DefaultTableModel) table.getModel();
            model.setRowCount(0);
            
           for (ChargingStation r : map) {
               Object row[] = new Object[5];
               row[0] = r;
               row[1] = r.getPileList().size();
               row[2] = r.getAvailableChargingPile().size();
               row[3] = r.getBrokenChargingPile().size();
               if(r.getNetwork() == null){    
                System.out.println("No Network Saved in this Station");
               }
               else{
                   row[4] = r.getNetwork().getName();
               }
               model.addRow(row);
           }
    }

    private void DisplayChart() {
        DefaultPieDataset dataset = new DefaultPieDataset();

        for (ChargingStation r : map) {
               dataset.setValue(r.getName(), r.getPileList().size());
           }
        JFreeChart chart = ChartFactory.createPieChart3D(
                "Charging Pile Distribution", // chart title                   
                dataset, // data 
                true, // include legend                   
                true,
                false);
        // set chart properties
        final PiePlot3D plot = (PiePlot3D) chart.getPlot();
        PieSectionLabelGenerator gen = new StandardPieSectionLabelGenerator(
            "{0}: {1}Piles ({2})", new DecimalFormat("0"), new DecimalFormat("0%"));
        plot.setLabelGenerator(gen);
        plot.setStartAngle(270);
        plot.setForegroundAlpha(0.60f);
        plot.setInteriorGap(0.02);
        ChartPanel chartPanel = new ChartPanel(chart);
        chartPnl.removeAll();        // clear panel before add new chart
        chartPnl.add(chartPanel);
        chartPnl.setVisible(true);
        chartPnl.validate();         // refresh panel to display new chart
    }

}
