/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.Company.Admin;

import Business.Employee.Employee;
import Business.Enterprise.Enterprise;
import Business.Organization.Organization;
import Business.Organization.OrganizationDirectory;
import Business.Role.Role;
import Business.UserAccount.UserAccount;
import java.awt.CardLayout;
import java.awt.Color;
import java.util.Iterator;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTextField;
import javax.swing.border.LineBorder;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author shaohanghu
 */
public class CompCreateUserJPanel extends javax.swing.JPanel {

    /**
     * Creates new form CreateUserJPanel
     */
    
    JPanel userProcessContainer;
    OrganizationDirectory orgDir;
    
    public CompCreateUserJPanel(JPanel userProcessContainer,
            OrganizationDirectory orgDir) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.orgDir = orgDir;
        popOrganizationComboBox();
        popData();
//        combo.removeAllItems();
//        combo.addItem("Company Tenderee");
//        combo.addItem("Company Analytics");
//        combo.addItem("Company Executive");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        userJTable = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        labelRoe = new javax.swing.JLabel();
        txtPw = new javax.swing.JPasswordField();
        txtPwRe = new javax.swing.JPasswordField();
        txtUserName = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        labelUserName = new javax.swing.JLabel();
        labelPw = new javax.swing.JLabel();
        labelPwRe = new javax.swing.JLabel();
        combo = new javax.swing.JComboBox();
        roleJComboBox = new javax.swing.JComboBox();
        buttonConfirm = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        btnDelete = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));
        setForeground(new java.awt.Color(0, 51, 255));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        userJTable.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        userJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "User Name", "Role"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                true, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(userJTable);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 70, 310, 400));

        jPanel1.setBackground(new java.awt.Color(197, 212, 226));
        jPanel1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        labelRoe.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        labelRoe.setText("Organization:");

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel4.setText("Role:");

        labelUserName.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        labelUserName.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        labelUserName.setText("Username:");

        labelPw.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        labelPw.setText("Password:");

        labelPwRe.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        labelPwRe.setText("Re-Password:");

        combo.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        combo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        combo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboActionPerformed(evt);
            }
        });

        roleJComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        buttonConfirm.setBackground(new java.awt.Color(255, 255, 255));
        buttonConfirm.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        buttonConfirm.setForeground(new java.awt.Color(40, 113, 162));
        buttonConfirm.setText("Create Account");
        buttonConfirm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonConfirmActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(labelUserName)
                    .addComponent(labelPwRe, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelRoe, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelPw, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(roleJComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(buttonConfirm, javax.swing.GroupLayout.DEFAULT_SIZE, 261, Short.MAX_VALUE)
                    .addComponent(combo, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtPwRe)
                    .addComponent(txtPw)
                    .addComponent(txtUserName))
                .addContainerGap(79, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(labelUserName, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtUserName, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(labelPw)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtPw, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(labelPwRe)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtPwRe, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(labelRoe)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(combo, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(roleJComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(buttonConfirm, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(48, Short.MAX_VALUE))
        );

        add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 70, 370, 470));

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 102, 204));
        jLabel2.setText("Delete Selected User");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 480, 150, 30));

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 102, 153));
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel3.setText("Selected:");
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 520, 100, -1));

        btnDelete.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnDelete.setForeground(new java.awt.Color(40, 113, 162));
        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });
        add(btnDelete, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 510, 130, 30));

        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pics/admin.png"))); // NOI18N
        jLabel5.setText(" ");
        add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 30, 50, 40));

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(0, 102, 153));
        jLabel6.setText("Current Employees");
        add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 30, 174, 31));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 102, 153));
        jLabel1.setText("Create New User Account");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 30, 260, 31));
    }// </editor-fold>//GEN-END:initComponents
      public void popOrganizationComboBox() {
        combo.removeAllItems();

        for (Organization organization : orgDir.getOrganizationList()) {
            combo.addItem(organization);
        }
    }
      
      private void populateRoleComboBox(Organization organization){
        roleJComboBox.removeAllItems();
        for (Role role : organization.getSupportedRole()){
            roleJComboBox.addItem(role);
        }
    }
      
      public void popData() {

        DefaultTableModel model = (DefaultTableModel) userJTable.getModel();

        model.setRowCount(0);

        for (Organization organization : orgDir.getOrganizationList()) {
            for (UserAccount ua : organization.getUserAccountDirectory().getUserAccountList()) {
                Object row[] = new Object[2];
                row[0] = ua;
                if(ua.getRole().toString().equals("Business.Role.Company.CompanyExecutiveRole")){
                    row[1] = "Executive";
                }
                else if(ua.getRole().toString().equals("Business.Role.Company.CompanyTendererRole")){
                    row[1] = "Tenderer";
                }
                else if(ua.getRole().toString().equals("Business.Role.Company.CompanyAnalyticsRole")){
                    row[1] = "Analytics";
                }
                else if(ua.getRole().toString().equals("Business.Role.Company.CompanyAdmin")){
                    row[1] = "Admin";
                }
                
                
                ((DefaultTableModel) userJTable.getModel()).addRow(row);
            }
        }
    }
    private void buttonConfirmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonConfirmActionPerformed
        // TODO add your handling code here:
        labelUserName.setForeground(Color.BLACK);
        txtUserName.setBorder(new JTextField().getBorder());
        labelPw.setForeground(Color.BLACK);
        //txtPword.setBorder(new LineBorder(Color.BLACK));
        txtPw.setBorder(new JTextField().getBorder());
        labelPwRe.setForeground(Color.BLACK);
        txtPwRe.setBorder(new JTextField().getBorder());
        Pattern email = Pattern.compile("^[a-zA-Z0-9]+_[a-zA-Z0-9]+@[a-zA-Z0-9]+.[a-zA-Z0-9]+$");
        Pattern password = Pattern.compile("^(?=.*[A-Za-z])(?=.*\\d)[A-Za-z\\d]{4,}$");
        Matcher em = email.matcher(txtUserName.getText());
        Matcher pm = password.matcher(txtPw.getText());
        System.out.println(
            "pw"+ txtPw);
        System.out.println(
            "pwre"+ txtPwRe.getText());
        if(txtUserName.getText().isEmpty() || txtPw.getText().isEmpty() || txtPwRe.getText().isEmpty()){
            JOptionPane.showMessageDialog(null, "All blank needs to be filled", "Warning",JOptionPane.WARNING_MESSAGE);
        }
        else if(combo.getSelectedItem() == null){
            JOptionPane.showMessageDialog(null, "Select a role", "Warning",JOptionPane.WARNING_MESSAGE);
        }
        //        else if(!em.matches()){
            //            labelUserName.setForeground(Color.red);
            //            txtUserName.setBorder(new LineBorder(Color.RED));
            //            JOptionPane.showMessageDialog(null, "User name requires format of user_name@xx.xx", "Warning",JOptionPane.WARNING_MESSAGE);
            //        }
        else if(!pm.matches()){
            labelPw.setForeground(Color.red);
            txtPw.setBorder(new LineBorder(Color.RED));
            JOptionPane.showMessageDialog(null, "Password should be at least 4 digits, One letter one number.", "Warning",JOptionPane.WARNING_MESSAGE);
        }
        else if(!txtPw.getText().equals(txtPwRe.getText())){
            labelPwRe.setForeground(Color.red);
            txtPwRe.setBorder(new LineBorder(Color.RED));
            JOptionPane.showMessageDialog(null, "Two password does not match", "Warning",JOptionPane.WARNING_MESSAGE);
        }
        else{
            String username  = txtUserName.getText();
            String pw = txtPw.getText();
            //Employee newEmp = new Employee();
            Role role = (Role) roleJComboBox.getSelectedItem();
            Organization organization = (Organization)combo.getSelectedItem(); 
            organization.getUserAccountDirectory().createUserAccount(username,
                    pw,username, role);

            JOptionPane.showMessageDialog(null, "Success");
            popData();
            txtPw.setText("");
            txtPwRe.setText("");
            txtUserName.setText("");

//            if(combo.getSelectedItem() == "Restaurant"){
//                //Add to both dir
//                if(system.getUserAccountDirectory().createResuaurantAccount(username, pw, Role.RoleType.RestaurantAdmin)==true){
//                    JOptionPane.showMessageDialog(null, "Success");
//                    backAction();
//                }
//                else{
//                    JOptionPane.showMessageDialog(null, "UserName Used");
//                }
//                //system.getRestaurantDirectory().addRestaurant(username, pw, Role.RoleType.RestaurantAdmin);
//
//            }
//            else if(combo.getSelectedItem() == "Customer"){
//                if(system.getUserAccountDirectory().createCustomerAccount(username, pw, Role.RoleType.Customer) == true){
//                    JOptionPane.showMessageDialog(null, "Success");
//                    backAction();
//                }
//                else{
//                    JOptionPane.showMessageDialog(null, "UserName Used");
//                }
//
//            }
//            else if(combo.getSelectedItem() == "DeliveryMan"){
//                if(system.getUserAccountDirectory().createDeliveryAccount(username, pw, Role.RoleType.DeliveryMan )==true){
//                    JOptionPane.showMessageDialog(null, "Success");
//                    backAction();
//                }
//                else{
//                    JOptionPane.showMessageDialog(null, "UserName Used");
//                }
//            }

        }
    }//GEN-LAST:event_buttonConfirmActionPerformed
 private void backAction() {
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }
    private void comboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboActionPerformed
        Organization organization = (Organization) combo.getSelectedItem();
        if (organization != null){
            //populateEmployeeComboBox(organization);
            populateRoleComboBox(organization);
        }
    }//GEN-LAST:event_comboActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        // TODO add your handling code here:
        int row = userJTable.getSelectedRow();
        if(row<0){
            JOptionPane.showMessageDialog(null, "Please select a row!!", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        UserAccount o = (UserAccount)userJTable.getValueAt(row,0);
//        for (Organization organization : orgDir.getOrganizationList()) {
//            for (UserAccount ua : organization.getUserAccountDirectory().getUserAccountList()) {
//                if(ua == o){
//                    int n = JOptionPane.showConfirmDialog(null, "Delete User " + organization.getName() + " ?", "Delete?", JOptionPane.YES_NO_OPTION);
//                    if(n == 0){
//                    organization.getUserAccountDirectory().getUserAccountList().remove(o);
//                    JOptionPane.showMessageDialog(null, "Deleted!");
//                    popData();
//       
//                    }
//                }
//            }
//        }
            
         for(Iterator<Organization> iterator = orgDir.getOrganizationList().iterator(); iterator.hasNext();){
             Organization org = iterator.next();
             for(Iterator<UserAccount> iterator2 = org.getUserAccountDirectory().getUserAccountList().iterator(); iterator2.hasNext();){
                 UserAccount ua = iterator2.next();
                 if(ua == o){
                    int n = JOptionPane.showConfirmDialog(null, "Delete User " + org.getName() + " ?", "Delete?", JOptionPane.YES_NO_OPTION);
                    if(n == 0){
                    org.getUserAccountDirectory().getUserAccountList().remove(o);
                    JOptionPane.showMessageDialog(null, "Deleted!");
                    popData();
                    break; 
       
                    }
                }
             }
         }
       
    }//GEN-LAST:event_btnDeleteActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton buttonConfirm;
    private javax.swing.JComboBox combo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel labelPw;
    private javax.swing.JLabel labelPwRe;
    private javax.swing.JLabel labelRoe;
    private javax.swing.JLabel labelUserName;
    private javax.swing.JComboBox roleJComboBox;
    private javax.swing.JPasswordField txtPw;
    private javax.swing.JPasswordField txtPwRe;
    private javax.swing.JTextField txtUserName;
    private javax.swing.JTable userJTable;
    // End of variables declaration//GEN-END:variables
}
