/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.Company.Executive;

import Business.Enterprise.Enterprise;
import Business.Network.Network;
import Business.Organization.Company.AnalyticsOrganization;
import Business.Organization.Company.ExecutiveOrganization;
import Business.Organization.Organization;
import Business.UserAccount.UserAccount;
import Business.WorkRequest.AnalyticsMaintenanceRequest;
import Business.WorkRequest.AnalyticsNewStationRequest;
import java.awt.CardLayout;
import java.text.SimpleDateFormat;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author shaohanghu
 */
public class ExeViewMaintenanceRequest extends javax.swing.JPanel {

    /**
     * Creates new form ExeViewMaintenanceRequest
     */
    JPanel userProcessContainer;
    Network network;
    Enterprise enterprise;
    UserAccount account;
    ExecutiveOrganization org;
    List<AnalyticsMaintenanceRequest> list;
    
    public ExeViewMaintenanceRequest(JPanel compExeWorkAreaPanel, Network network,
            Enterprise enterprise, UserAccount account,
            ExecutiveOrganization org) {
        initComponents();
        this.userProcessContainer = compExeWorkAreaPanel;
        this.network = network;
        this.enterprise = enterprise;
        this.account = account;
        this.org = org;
        getList();
        refreshTable();
    }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        buttonViewDetail = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        refreshJButton = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "ID", "Analytics", "Date", "Station", "Pile", "Status"
            }
        ));
        jScrollPane1.setViewportView(table);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 90, 690, 170));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(102, 122, 164));
        jLabel1.setText("Maintenance Request From Analytics");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(183, 13, 428, 52));

        buttonViewDetail.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        buttonViewDetail.setForeground(new java.awt.Color(102, 122, 164));
        buttonViewDetail.setText("View Ticket Detail");
        buttonViewDetail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonViewDetailActionPerformed(evt);
            }
        });
        add(buttonViewDetail, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 290, -1, 47));

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pics/analysisBG1.jpg"))); // NOI18N
        jLabel2.setText(" ");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 260, 580, 270));

        refreshJButton.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        refreshJButton.setForeground(new java.awt.Color(40, 113, 162));
        refreshJButton.setText("Refresh");
        refreshJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshJButtonActionPerformed(evt);
            }
        });
        add(refreshJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 50, 97, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void buttonViewDetailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonViewDetailActionPerformed
        // TODO add your handling code here:
        int row = table.getSelectedRow();
        if(row<0){
            JOptionPane.showMessageDialog(null, "Please select a row!!", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        AnalyticsMaintenanceRequest o = (AnalyticsMaintenanceRequest)table.getValueAt(row,0);
        ExeViewMaintenanceReq2 panel = new ExeViewMaintenanceReq2(userProcessContainer, o, account, org, enterprise);
        userProcessContainer.add("ExeViewMaintenanceReq2", panel);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);
    }//GEN-LAST:event_buttonViewDetailActionPerformed

    private void refreshJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshJButtonActionPerformed
        refreshTable();
    }//GEN-LAST:event_refreshJButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonViewDetail;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton refreshJButton;
    private javax.swing.JTable table;
    // End of variables declaration//GEN-END:variables

    private void getList() {
       for(Organization org : enterprise.getOrganizationDirectory().getOrganizationList()){
            System.out.println(
                        "org is" + org.getType().getValue());
            if(org.getType().getValue().equals("Company Analytics Organization")){
                System.out.println(
                        "org is" + org.getType().getValue());
                AnalyticsOrganization temp = (AnalyticsOrganization) org;
                    list = (temp.getAnalyticsMaintenanceWorkQueue().getList());
                
            }
        }
    }

    private void refreshTable() {
        SimpleDateFormat format = new SimpleDateFormat("yyyy-MM-dd");
        DefaultTableModel model = (DefaultTableModel) table.getModel();
            model.setRowCount(0);
            if(list == null){
                System.out.println(
                        "no list");
            }
            else{
                for (AnalyticsMaintenanceRequest r : list) {
               Object row[] = new Object[6];
               row[0] = r;
               row[1] = r.getSender();
               row[2] = format.format(r.getRequestDate());
               row[5] = r.getStatus();
               row[3] = r.getRequestedLocation();
               row[4] = "Pile#" + r.getRequestedPile().getId();
               model.addRow(row);
           }
            }
    }
}
