/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.Company.Executive;

import Business.Enterprise.CompanyEnterprise;
import Business.Enterprise.ContractorEnterprise;
import Business.Enterprise.Enterprise;
import Business.Network.Network;
import Business.Organization.Company.ExecutiveOrganization;
import Business.Organization.Contractor.CoopContractor;
import Business.StationMap.Coordinate;
import Business.UserAccount.UserAccount;
import Business.WorkRequest.AnalyticsNewStationRequest;
import Business.WorkRequest.ExecutiveNewLocationRequest;
import java.awt.CardLayout;
import java.awt.Panel;
import java.io.IOException;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import static userinterface.User.UserReportAShortageJPanel.geocoding;

/**
 *
 * @author shaohanghu
 */
public class ExeGeneBuildingReq extends javax.swing.JPanel {

    /**
     * Creates new form ExeGeneBuildingReq
     */
    JPanel userProcessContainer;
    ExecutiveNewLocationRequest request;
    UserAccount account;
    Network network;
    ExecutiveOrganization org;
    CompanyEnterprise enterprise;
    
    
    public ExeGeneBuildingReq(JPanel userProcessContainer,
            AnalyticsNewStationRequest request, UserAccount account,
            ExecutiveOrganization org, ExecutiveNewLocationRequest geneReq,
            Enterprise enterprise) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.request = geneReq;
        this.account = account;
        this.org = org;
        this.enterprise = (CompanyEnterprise) enterprise;
        DisplayContent();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txtYcoor = new javax.swing.JTextField();
        confirm = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtReason = new javax.swing.JTextArea();
        jLabel3 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtFromUser = new javax.swing.JTextField();
        txtXcoor = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        comboContract = new javax.swing.JComboBox();
        jLabel4 = new javax.swing.JLabel();
        buttonBack = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        txtStationName = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        txtAddress = new javax.swing.JTextField();
        buttonGeneCoordinate = new javax.swing.JButton();
        spinPie = new javax.swing.JSpinner();
        jLabel2 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        txtYcoor.setEnabled(false);
        add(txtYcoor, new org.netbeans.lib.awtextra.AbsoluteConstraints(276, 313, 280, -1));

        confirm.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        confirm.setForeground(new java.awt.Color(102, 122, 164));
        confirm.setText("Confirm");
        confirm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                confirmActionPerformed(evt);
            }
        });
        add(confirm, new org.netbeans.lib.awtextra.AbsoluteConstraints(276, 554, 150, 30));

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel9.setText("Y Coordinates:");
        add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(88, 316, 170, -1));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(102, 122, 164));
        jLabel1.setText("Build New Charging Station Request for Contractor");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 40, 541, 50));

        txtReason.setColumns(20);
        txtReason.setRows(5);
        jScrollPane1.setViewportView(txtReason);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(276, 375, 309, 172));

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel3.setText("Requested By:");
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(88, 113, 170, -1));

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel5.setText("X Coordinates:");
        add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(88, 285, 170, -1));

        txtFromUser.setEnabled(false);
        add(txtFromUser, new org.netbeans.lib.awtextra.AbsoluteConstraints(276, 110, 280, -1));

        txtXcoor.setEnabled(false);
        add(txtXcoor, new org.netbeans.lib.awtextra.AbsoluteConstraints(276, 282, 280, -1));

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel8.setText("Message:");
        add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(88, 375, 170, -1));

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel6.setText("Number of Piles:");
        add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(88, 347, 170, -1));

        comboContract.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        add(comboContract, new org.netbeans.lib.awtextra.AbsoluteConstraints(276, 147, 280, -1));

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel4.setText("Contractor Assignment:");
        add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(88, 150, 170, -1));

        buttonBack.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        buttonBack.setForeground(new java.awt.Color(102, 122, 164));
        buttonBack.setText("<< Back");
        buttonBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonBackActionPerformed(evt);
            }
        });
        add(buttonBack, new org.netbeans.lib.awtextra.AbsoluteConstraints(14, 13, 101, 30));

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel7.setText("Station Name:");
        add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(88, 187, 170, -1));
        add(txtStationName, new org.netbeans.lib.awtextra.AbsoluteConstraints(276, 184, 280, -1));

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel10.setText("Address:");
        add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(88, 218, 170, -1));
        add(txtAddress, new org.netbeans.lib.awtextra.AbsoluteConstraints(276, 215, 280, -1));

        buttonGeneCoordinate.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        buttonGeneCoordinate.setForeground(new java.awt.Color(102, 122, 164));
        buttonGeneCoordinate.setText("Generate Coordinate");
        buttonGeneCoordinate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonGeneCoordinateActionPerformed(evt);
            }
        });
        add(buttonGeneCoordinate, new org.netbeans.lib.awtextra.AbsoluteConstraints(276, 246, -1, 28));
        add(spinPie, new org.netbeans.lib.awtextra.AbsoluteConstraints(276, 344, -1, -1));

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pics/cooperate.png"))); // NOI18N
        jLabel2.setText(" ");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 0, 0));

        jLabel11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pics/cooperate.png"))); // NOI18N
        jLabel11.setText(" ");
        add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(-50, 130, 880, 520));
    }// </editor-fold>//GEN-END:initComponents

    private void confirmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_confirmActionPerformed
        // TODO add your handling code here:
      
        CoopContractor con = (CoopContractor) comboContract.getSelectedItem();
        int numPile = (int) spinPie.getValue();
        int cost = con.getPilePrice()*numPile + con.getStationPrice();
        int newBalance = enterprise.getBalance() - cost;
//        for(CoopContractor c : enterprise.getCoopContractorList()){
//            if(c.getContractor() == (ContractorEnterprise) comboContract.getSelectedItem()){
//                con = c;
//                break;
//            }
//        }
        if(txtStationName.getText().isEmpty()){
            JOptionPane.showMessageDialog(null, "Need Station Name");
        }
        else if(enterprise.getBalance() < cost){
            JOptionPane.showMessageDialog(null, "Not Enough Balance");
        }
        else{
            int n = JOptionPane.showConfirmDialog(null, "The cost will be $" + cost + " and the balance will be $" + newBalance, "Continue?", JOptionPane.YES_NO_OPTION);
            if(n == 0){
              Double x = Double.parseDouble(txtXcoor.getText());
                Double y = Double.parseDouble(txtYcoor.getText());
                Coordinate location = new Coordinate(x, y);
                CoopContractor temp = (CoopContractor) comboContract.getSelectedItem();
                
                request.setRequestedLocation(location);
                request.setNumPiles(numPile);
                request.setFullAddress(txtAddress.getText());
                request.setStationName(txtStationName.getText());
                request.setMessage(txtReason.getText());
                request.setStatus("PENDING");
                request.setSendingCompany(enterprise);
                request.setRecevingContractor(temp.getContractor());
                org.getExecutiveImplementationWorkQueue().add(request);

                enterprise.setBalance(newBalance);
                JOptionPane.showMessageDialog(null, "Request Submitted!");
                userProcessContainer.remove(this);
            }
 
        }
        
    }//GEN-LAST:event_confirmActionPerformed

    private void buttonBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonBackActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_buttonBackActionPerformed
    public boolean patternCorrect(String input){
        Pattern p = Pattern.compile("^[a-zA-Z0-9 ]+$");
        Matcher m = p.matcher(input);
        boolean b = m.matches();
        return b;
    }
    private void buttonGeneCoordinateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonGeneCoordinateActionPerformed
        // TODO add your handling code here:
        // TODO add your handling code here:
        String address= txtAddress.getText();
        boolean flag=patternCorrect(address);
        String [] parsed = address.split(" ");
        if (!flag){
            JOptionPane.showMessageDialog(null, "Address should follow the format", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        if (address.length()==0 || parsed.length==0){
            JOptionPane.showMessageDialog(null, "Address should not be empty", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        if (parsed.length<2){
            JOptionPane.showMessageDialog(null, "There should be enough information to find the place", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }

        String url="https://maps.googleapis.com/maps/api/geocode/json?&address=";
        for (int i=0;i<parsed.length-1;i++){
            url+=parsed[i]+"+";
        }
        url+=parsed[parsed.length-1];
        url+="&key=AIzaSyB4LQVH_DbM4JE9gJU8nDe9rkYL6iS2qwU";
        System.out.println(url);
        try
        {
            Coordinate co;
            co=geocoding(url);
            String txtCoordinate = "Latitude: "+co.getX()+" Longtitude: "+co.getY();
            txtXcoor.setText(String.valueOf(co.getX()));
            txtYcoor.setText(String.valueOf(co.getY()));
            txtAddress.setText(co.getFullAddress());
        } catch (IOException ex)
        {
            JOptionPane.showMessageDialog(null, "There is no search result matched", "Error", JOptionPane.ERROR_MESSAGE);
            return;
            //            Logger.getLogger(UserReportAShortageJPanel.class.getName()).log(Level.SEVERE, null, ex);
        } catch (Exception ex)
        {
            JOptionPane.showMessageDialog(null, "There is no search result matched", "Error", JOptionPane.ERROR_MESSAGE);
            return;
            //            Logger.getLogger(UserReportAShortageJPanel.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_buttonGeneCoordinateActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonBack;
    private javax.swing.JButton buttonGeneCoordinate;
    private javax.swing.JComboBox comboContract;
    private javax.swing.JButton confirm;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSpinner spinPie;
    private javax.swing.JTextField txtAddress;
    private javax.swing.JTextField txtFromUser;
    private javax.swing.JTextArea txtReason;
    private javax.swing.JTextField txtStationName;
    private javax.swing.JTextField txtXcoor;
    private javax.swing.JTextField txtYcoor;
    // End of variables declaration//GEN-END:variables

    private void DisplayContent() {
        txtFromUser.setText(request.getSender().getUsername());
        txtXcoor.setText(String.valueOf(request.getRequestedLocation().getX()));
        txtYcoor.setText(String.valueOf(request.getRequestedLocation().getY()));
        spinPie.setValue(request.getNumPiles());
        txtAddress.setText(request.getFullAddress());
        comboContract.removeAllItems();
        for(CoopContractor c : enterprise.getCoopContractorList()){
            comboContract.addItem(c);
        }
        txtReason.setText(request.getMessage() + "\n---Executive Message---\nTYPE HERE\n---End Executive Message---\n");
    }
}
