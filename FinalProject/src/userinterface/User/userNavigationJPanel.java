/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.User;

import Business.EcoSystem;
import Business.StationMap.ChargingPile;
import Business.StationMap.ChargingStation;
import Business.StationMap.Coordinate;
import Business.UserAccount.UserAccount;
import java.awt.CardLayout;
import java.awt.Component;
import java.io.IOException;
import java.net.MalformedURLException;
import java.net.URL;
import java.util.Scanner;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import org.json.JSONArray;
import org.json.JSONObject;

/**
 *
 * @author adam
 */
public class userNavigationJPanel extends javax.swing.JPanel
{
    JPanel userProcessContainer;
    EcoSystem system;
    UserAccount account;
    ChargingStation cs;
    int ifSelected;
    /**
     * Creates new form userLocationJPanel
     */


    public userNavigationJPanel (JPanel userProcessContainer, EcoSystem system,UserAccount account, ChargingStation cs) throws IOException
    {
        
       initComponents();
       this.userProcessContainer=userProcessContainer;
       this.system=system;    
       this.account = account;
       this.cs=cs;
       this.ifSelected=0;
       getDirection();
       editPane.setCaretPosition(0);
       populate();
    }
    
    private void populate(){
        DefaultTableModel model = (DefaultTableModel)pileTable.getModel();
        model.setRowCount(0);
        
        for(ChargingPile cp : cs.getAvailableChargingPile()) {
            Object row[] = new Object[2];
            row[0] = cp;
            model.addRow(row);
        }
    
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        btnBack = new javax.swing.JButton();
        btnArrived = new javax.swing.JButton();
        labelFrom = new javax.swing.JLabel();
        labelTo = new javax.swing.JLabel();
        labelDuration = new javax.swing.JLabel();
        labelDistance = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        editPane = new javax.swing.JEditorPane();
        jLabel7 = new javax.swing.JLabel();
        btnSelect = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        pileTable = new javax.swing.JTable();

        setBackground(new java.awt.Color(255, 255, 255));
        setPreferredSize(new java.awt.Dimension(1150, 600));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        jLabel1.setText("Start Navigation");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 10, -1, -1));

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setText("From:");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 70, -1, -1));

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel3.setText("To:");
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 110, -1, -1));

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel4.setText("Duration:");
        add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 150, -1, -1));

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel5.setText("Distance:");
        add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 190, -1, -1));

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel6.setText("Steps:");
        add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 230, -1, -1));

        btnBack.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnBack.setText("<Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });
        add(btnBack, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 10, -1, -1));

        btnArrived.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnArrived.setText("Finished>");
        btnArrived.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnArrivedActionPerformed(evt);
            }
        });
        add(btnArrived, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 470, 140, 30));

        labelFrom.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        labelFrom.setText(" ");
        add(labelFrom, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 70, 320, -1));

        labelTo.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        add(labelTo, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 110, 330, 20));

        labelDuration.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        labelDuration.setText(" ");
        add(labelDuration, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 150, 90, -1));

        labelDistance.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        labelDistance.setText(" ");
        add(labelDistance, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 190, 90, -1));

        editPane.setEditable(false);
        editPane.setContentType("text/html"); // NOI18N
        editPane.setFont(new java.awt.Font("AppleMyungjo", 0, 13)); // NOI18N
        jScrollPane2.setViewportView(editPane);

        add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 230, 320, 227));

        jLabel7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pics/navigation.png"))); // NOI18N
        jLabel7.setText(" ");
        add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 310, 210, 190));

        btnSelect.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnSelect.setText("Start Charging");
        btnSelect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSelectActionPerformed(evt);
            }
        });
        add(btnSelect, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 350, 210, 30));

        pileTable.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        pileTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null},
                {null},
                {null},
                {null}
            },
            new String [] {
                "ChargingPile ID"
            }
        ));
        jScrollPane1.setViewportView(pileTable);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 70, 210, 260));
    }// </editor-fold>//GEN-END:initComponents

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_btnBackActionPerformed
    {//GEN-HEADEREND:event_btnBackActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout)userProcessContainer.getLayout();
        layout.previous(userProcessContainer); 
    }//GEN-LAST:event_btnBackActionPerformed

    private void btnArrivedActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_btnArrivedActionPerformed
    {//GEN-HEADEREND:event_btnArrivedActionPerformed
        // TODO add your handling code here:
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        Component[] componentArray = userProcessContainer.getComponents();        
        for (Component c: componentArray){
            userProcessContainer.remove(c);
        }
        UserLocationJPanel panel = new UserLocationJPanel(userProcessContainer, system, account);
        userProcessContainer.add("UserLocationJPanel",panel);
        layout.first(userProcessContainer);
    }//GEN-LAST:event_btnArrivedActionPerformed

    private void btnSelectActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_btnSelectActionPerformed
    {//GEN-HEADEREND:event_btnSelectActionPerformed
        // TODO add your handling code here:
        if (ifSelected!=0){
            JOptionPane.showMessageDialog(null, "Cannot select twice!!", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }else{
        int row =pileTable.getSelectedRow();
        if(row<0){
            JOptionPane.showMessageDialog(null, "Pls select a row!!", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        ChargingPile m = (ChargingPile)pileTable.getValueAt(row, 0); 
        m.setUsage(m.getUsage()+3);
        m.setIsOccupied(true);
        m.setEstimatedTime(60);
        ifSelected=1;
        JOptionPane.showMessageDialog(null, "Success!!", "Message", JOptionPane.INFORMATION_MESSAGE);
        populate();
        }
        
    }//GEN-LAST:event_btnSelectActionPerformed
    private void getDirection() throws IOException{
        String from = account.getCoordinate().getFullAddress();
        labelFrom.setText(from);
        from = from.replace(" ","%20");
        
        
        String to = getAddress(cs.getCoordinate()).getFullAddress();
        labelTo.setText(to);
        to=to.replace(" ", "%20");
        //https://maps.googleapis.com/maps/api/directions/json?
        //origin=4%20Lucy%20St,%20Dorchester,%20MA%2002125,%20USA
                //&destination=6districtave&key=AIzaSyB4LQVH_DbM4JE9gJU8nDe9rkYL6iS2qwU
        String query = "https://maps.googleapis.com/maps/api/directions/json?origin=";
        String query2="&destination=";
        String queryend= "&key=AIzaSyB4LQVH_DbM4JE9gJU8nDe9rkYL6iS2qwU";
        String fullquery = query+from+query2+to+queryend;
        getDirectionHelper(fullquery);
    }
    
    private String getDirectionHelper(String fullquery) throws MalformedURLException, IOException{
        URL url = new URL(fullquery);
 
    // read from the URL
    Scanner scan = new Scanner(url.openStream());
    String str = new String();
    while (scan.hasNext())
        str += scan.nextLine();
    scan.close();
 
    // build a JSON object
    JSONObject obj = new JSONObject(str);
    if (! obj.getString("status").equals("OK"))
        return null;
    JSONArray jRoutes = obj.getJSONArray("routes");
    System.out.println(jRoutes.length());
    JSONObject jRoute= (JSONObject)jRoutes.get(0);
    JSONArray jLegs= jRoute.getJSONArray("legs");
    
    
        JSONObject jleg = (JSONObject)jLegs.get(0);
        System.out.println(jleg.getJSONObject("distance").getString("text"));
        labelDistance.setText(jleg.getJSONObject("distance").getString("text"));
        labelDuration.setText(jleg.getJSONObject("duration").getString("text"));
        JSONArray jsteps = jleg.getJSONArray("steps");
        String instruction="";
        for (int i=0;i<jsteps.length();i++){
            JSONObject jstep = (JSONObject) jsteps.get(i);
            
             instruction += jstep.getString("html_instructions")+"<br>";
            
            
        }
        instruction=instruction.replace("<wbr/>", "");
        System.out.println(instruction);
        editPane.setText("<html>"+instruction+"</html>");
    
    return null;
 
    }
    
    private Coordinate getAddress(Coordinate co){
        String query="https://maps.googleapis.com/maps/api/geocode/json?latlng="+co.getX()+","+co.getY()+"&key=AIzaSyB4LQVH_DbM4JE9gJU8nDe9rkYL6iS2qwU";
        
        Coordinate addCo=null;
        try
        {
            addCo = UserReportAShortageJPanel.geocoding(query);
        } catch (Exception ex)
        {
            Logger.getLogger(userNavigationJPanel.class.getName()).log(Level.SEVERE, null, ex);
        }
        return addCo;
        //https://maps.googleapis.com/maps/api/geocode/json?latlng=40.714224,-73.961452&key=YOUR_API_KEY
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnArrived;
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnSelect;
    private javax.swing.JEditorPane editPane;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel labelDistance;
    private javax.swing.JLabel labelDuration;
    private javax.swing.JLabel labelFrom;
    private javax.swing.JLabel labelTo;
    private javax.swing.JTable pileTable;
    // End of variables declaration//GEN-END:variables
}
