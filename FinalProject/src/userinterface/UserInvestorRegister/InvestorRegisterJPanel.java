/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.UserInvestorRegister;

import Business.EcoSystem;
import Business.Enterprise.Enterprise;
import Business.Network.Network;
import Business.Organization.EVDriverOrganization;
import Business.Organization.InvestorOrganization;
import Business.Organization.Organization;
import Business.Role.InvestorRole;
import Business.UserAccount.UserAccount;
import java.awt.Color;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.BorderFactory;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTextField;
import userinterface.Investor.SendEmailToInvestor;

/**
 *
 * @author adam
 */
public class InvestorRegisterJPanel extends javax.swing.JPanel
{

    JPanel userProcessContainer;
    EcoSystem system;

    public InvestorRegisterJPanel (JPanel userProcessContainer, EcoSystem system)
    {

        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.system = system;
        populateComboBox();
    }
    private void populateComboBox(){
        comboRegion.removeAllItems();
        for(Network network : system.getNetworkList() ){
            comboRegion.addItem(network.toString());
        }
    }
    public  boolean patternCorrect(String input){
        Pattern p = Pattern.compile("^[a-zA-Z0-9 ]+$");
        Matcher m = p.matcher(input);
        boolean b = m.matches();
        return b;
    }
    public  boolean passwordCorrect(String input){
        Pattern p = Pattern.compile("^(?=.*[0-9])(?=.*[a-z])(?=\\S+$).{4,20}$");
        Matcher m = p.matcher(input);
        boolean b = m.matches();
        return b;
    }
    
    public boolean nameCorrect(String input){
        String regx = "^[\\p{L} .'-]+$";
        Pattern p = Pattern.compile(regx);
        Matcher m = p.matcher(input);
        boolean b = m.matches();
        return b;   
    }     
        public  boolean digitalCorrect(String input){
        Pattern p = Pattern.compile("^[0-9]{16}$");
        Matcher m = p.matcher(input);
        boolean b = m.matches();
        return b;
    }
    public boolean emailValidation (String input){
        Pattern p = Pattern.compile("^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,6}$",Pattern.CASE_INSENSITIVE);
        Matcher m = p.matcher(input);
        boolean b = m.matches();
        return b;
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton2 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        comboRegion = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtName = new javax.swing.JTextField();
        txtUsername = new javax.swing.JTextField();
        txtPassword = new javax.swing.JTextField();
        comboInvest = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        txtAccountNum = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        txtEmail = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));
        setPreferredSize(new java.awt.Dimension(1150, 600));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jButton2.setBackground(new java.awt.Color(0, 153, 255));
        jButton2.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jButton2.setForeground(new java.awt.Color(255, 255, 255));
        jButton2.setText("Register");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 360, 220, 40));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        jLabel1.setText("Register As An Investor ");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 30, -1, -1));

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setText("Please select the Network");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 130, -1, -1));

        add(comboRegion, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 150, 220, 30));

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel3.setText("Name");
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 130, -1, -1));

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel4.setText("Username");
        add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 200, -1, -1));

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel5.setText("Password");
        add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 270, -1, -1));
        add(txtName, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 150, 210, 40));
        add(txtUsername, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 220, 210, 40));
        add(txtPassword, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 290, 210, 40));

        comboInvest.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1~2999 USD", "3000~9999 USD", "10000~99999 USD", "Above 100000 USD" }));
        add(comboInvest, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 220, 220, 30));

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel6.setText("How much you will invest?");
        add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 200, -1, -1));

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel7.setText("Your Account Number");
        add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 270, -1, -1));
        add(txtAccountNum, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 290, 220, 40));

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel8.setText("For Dividends");
        add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 300, -1, -1));

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel9.setText("Email");
        add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 340, -1, -1));
        add(txtEmail, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 360, 210, 40));

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel11.setText("*Personal Information");
        add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 90, -1, -1));

        jLabel10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pics/invest.png"))); // NOI18N
        jLabel10.setText(" ");
        add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 60, 750, 410));

        jLabel12.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pics/investIcon.png"))); // NOI18N
        jLabel12.setText(" ");
        add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 20, -1, 50));
    }// </editor-fold>//GEN-END:initComponents
    public Boolean userUnique(String username){
         
          for (Network network : system.getNetworkList()) {
            for (Enterprise enterprise : network.getEnterpriseDirectory().getEnterpriseList()) {
                for (UserAccount ua : enterprise.getUserAccountDirectory().getUserAccountList()) {
                    if (ua.getUsername().equalsIgnoreCase(txtUsername.getText())) {
                        return false;
                    }
                }
                for (Organization organization : enterprise.getOrganizationDirectory().getOrganizationList()) {
                    for (UserAccount ua : organization.getUserAccountDirectory().getUserAccountList()) {
                        if (ua.getUsername().equalsIgnoreCase(txtUsername.getText())) {
                            return false;
                        }
                    }
                }
            }
          }
          return true;
        
     }
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jButton2ActionPerformed
    {//GEN-HEADEREND:event_jButton2ActionPerformed
        // TODO add your handling code here:
        String network = (String) comboRegion.getSelectedItem();
        String name = txtName.getText();
        boolean flag= patternCorrect(name);
        if (!flag){
            txtName.setBorder(BorderFactory.createLineBorder(Color.RED));
            txtName.setForeground(Color.red);
            JOptionPane.showMessageDialog(null, "Name format unacceptable!!", "Warning", JOptionPane.WARNING_MESSAGE);
            txtName.setBorder(new JTextField().getBorder());
            txtName.setForeground(Color.BLACK);
            return;
        }
        String username = txtUsername.getText();
        flag=patternCorrect(username);
        boolean unique = userUnique(username);
        if (!unique){
            txtUsername.setBorder(BorderFactory.createLineBorder(Color.RED));
            txtUsername.setForeground(Color.red);
            JOptionPane.showMessageDialog(null, "Username Already Exist!!", "Warning", JOptionPane.WARNING_MESSAGE);
            txtUsername.setBorder(new JTextField().getBorder());
            txtUsername.setForeground(Color.BLACK);
            return;
        }
        if (!flag){
            txtUsername.setBorder(BorderFactory.createLineBorder(Color.RED));
            txtUsername.setForeground(Color.red);
            JOptionPane.showMessageDialog(null, "Username format unacceptable!!", "Warning", JOptionPane.WARNING_MESSAGE);
            txtUsername.setBorder(new JTextField().getBorder());
            txtUsername.setForeground(Color.BLACK);
            return;
        }
        String password = txtPassword.getText();
        flag=passwordCorrect(password);
        if (!flag){
            txtPassword.setBorder(BorderFactory.createLineBorder(Color.RED));
            txtPassword.setForeground(Color.red);
            JOptionPane.showMessageDialog(null, "Password format unacceptable!!", "Warning", JOptionPane.WARNING_MESSAGE);
            txtPassword.setBorder(new JTextField().getBorder());
            txtPassword.setForeground(Color.BLACK);            
            return;
        }
        Enterprise investorEnterprise = null;
        String investLevel = (String)comboInvest.getSelectedItem();
        String email = txtEmail.getText();
        flag= emailValidation(email);
        if (!flag){
            txtEmail.setBorder(BorderFactory.createLineBorder(Color.RED));
            txtEmail.setForeground(Color.red);
            JOptionPane.showMessageDialog(null, "Email format unacceptable!!", "Warning", JOptionPane.WARNING_MESSAGE);
            txtEmail.setBorder(new JTextField().getBorder());
            txtEmail.setForeground(Color.BLACK);
            return;
        }
        String accountNum = txtAccountNum.getText();
        flag=digitalCorrect(accountNum);
        //set limit of the length of the account
        if (!flag){
            txtAccountNum.setBorder(BorderFactory.createLineBorder(Color.RED));
            txtAccountNum.setForeground(Color.red);
            JOptionPane.showMessageDialog(null, "Account Number format unacceptable!!", "Warning", JOptionPane.WARNING_MESSAGE);
            txtAccountNum.setBorder(new JTextField().getBorder());
            txtAccountNum.setForeground(Color.BLACK);
            return;
        }
        
        for (Network net : system.getNetworkList())
        {
            //find the selected network.
            if (net.toString().equals(network))
            {
                for (Enterprise e : net.getEnterpriseDirectory().getEnterpriseList())
                {
                    //                    System.out.println(e.getName());
                    if (e.getName().equals("Investor"))
                    {
                        investorEnterprise = e;
                    }
                }
                if (investorEnterprise == null)
                {
                    JOptionPane.showMessageDialog(null, "There is no such an enterprise!!", "Warning", JOptionPane.WARNING_MESSAGE);
                } else
                {
                    {
                        //set to default
                        txtName.setText("");
                        txtUsername.setText("");
                        txtPassword.setText("");
                        txtEmail.setText("");
                        txtAccountNum.setText("");
                        
                        

                        
                        
                        
                        
                        InvestorOrganization investorOrganization = (InvestorOrganization) investorEnterprise.getOrganizationDirectory().getOrganizationList().get(0);
                        UserAccount u = investorOrganization.getUserAccountDirectory().createUserAccount(username, password,name, new InvestorRole());
                        u.setAccountNumber(accountNum);
                        u.setInvestLevel(investLevel);
                        u.setEmailAdress(email);
//                        SendEmailToInvestor.sendEmail(email);
                        JOptionPane.showMessageDialog(null, "Success!!", "Message", JOptionPane.INFORMATION_MESSAGE);
                    }

                }

            }
    }//GEN-LAST:event_jButton2ActionPerformed

    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> comboInvest;
    private javax.swing.JComboBox<String> comboRegion;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JTextField txtAccountNum;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JTextField txtName;
    private javax.swing.JTextField txtPassword;
    private javax.swing.JTextField txtUsername;
    // End of variables declaration//GEN-END:variables
}
